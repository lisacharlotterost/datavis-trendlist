x = seq(-100,100,0.01)
y = seq(-10,10,0.0001)
par(mar = rep(0, 4), xpd = NA)
plot(cos(x),sin(x), cex = 0.1)
plot(100*cos(x)*100*x,sin(x/10)*sin(x)*cos(x), cex = 0.1)
plot(cos(x),sin(x), cex = 0.1)
plot(cos(x)*1000*sin(10000/x),-sin(1000/x)/10000*cos(x*10), cex = 0.1)
library(ggplot2)
ggplot(x,aes(sin(x),x)) + geom_point()
x = as.data.frame(x)
ggplot(x,aes(sin(x),x)) + geom_point()
ggplot(x,aes(sin(x),x)) +
geom_point(aes(colour = factor(x)))
ggplot(x,aes(sin(x),x)) + geom_point(aes(colour = factor(x))) + theme_bw()
e
e
plot(sinpi(cos(y*20)),sinpi(sinpi(y))*cos(y*100), cex = 0.1)
x = seq(-100,100,0.01)
y = seq(-10,10,0.0001)
cos
par(mar = rep(0, 4), xpd = NA)
plot(cos(x),sin(x), cex = 0.1)
plot(100*cos(x)*100*x,sin(x/10)*sin(x)*cos(x), cex = 0.1)
plot(cos(x)*1000*sin(10000/x),-sin(1000/x)/10000*cos(x*10), cex = 0.1)
plot(abs(sqrt(x))*x*abs(x),sin(x)*x, cex = 0.1)
plot(sinpi(x*abs(x/1000))*cos(x),sin(x/1000), cex = 0.1)
plot(acos(asin(y/4)*sin(y*1000)),acos(sinpi(y/5*sinpi(y*y)))*sinpi(y*5000), cex = 0.1)
plot(sin(x*1000),cos(y*100))
plot(sin(y*1000),cos(y*100))
plot(sin(y*1000),cos(y/100))
plot(sin(y*1000),cos(y/00))
plot(sin(y*1000),cos(y/100))
plot(sin(y*1000),cos(y/100))
c
plot(sin(y*1000),cos(y/100))
plot(sin(y*100),cos(y/100))
plot(sin(y*10),cos(y/100))
plot(sin(y*42),cos(y/100))
plot(sin(y/4),cos(y/100))
plot(sin(y/5),cos(y/100))
plot(sin(y/5),cos(y/10))
plot(sin(x/5),cos(x/10))
plot(sin(x/5),cos(x/100))
plot(sin(x*5),cos(x/100))
plot(sin(x*50),cos(x/100))
plot(sin(x*500),cos(x/100))
plot(sin(x*1000),cos(x/100))
plot(sin(x*1000),cos(x/1000))
plot(sin(x*1000),cos(x/10))
plot(sin(x*1000),cos(x/2))
plot(sin(x*1000),cos(x*2))
plot(cos(x*1000),cos(x*2))
plot(cos(x*100),cos(x*2))
plot(cos(x*100),cos(x*200))
plot(cos(x*100),cos(x*20))
plot(cos(x*100),cos(x/20))
plot(cos(x*100*sin(x)),cos(x/20))
plot(cos(x/100*sin(x)),cos(x/20))
plot(cos(x/100*sin(x*2)),cos(x/20))
plot(cos(x/100*sin(x*20)),cos(x/20))
plot(cos(x/100*sin(x*20)),cos(x*20))
plot(cos(x/100*sin(x*20)),cos(x*20)*sin(x))
plot(cos(x/100*sin(x*20)),cos(x*20)*sin(x/100))
plot(cos(x/100*sin(x*20)),cos(x/20)*sin(x/100))
plot(cos(x/100*cos(x*20)),cos(x/20)*sin(x/100))
plot(sin(x/100*cos(x*20)),cos(x/20)*sin(x/100))
plot(sin(x/x/100*cos(x*20)),cos(x/20)*sin(x/100))
plot(sin(x*x/100*cos(x*20)),cos(x/20)*sin(x/100))
plot(cos(x*x/100*cos(x*20)),cos(x/20)*sin(x/100))
plot(cos(x*x/100*cos(x*20)),cos(x*x/20)*sin(x/100))
plot(cos(x*x/100*cos(x*20)),sin(x*x/20)*sin(x/100))
plot(cos(x*x/100*cos(x*20)),sin(x*x/20)*sin(100))
plot(cos(x*x/100*cos(x*20)),sin(x*x/20))
plot(cos(x*x/100*cos(x)),sin(x*x/20))
plot(cos(x*x/100*cos(x)),sin(x*x))
plot(cos(x*x/100*cos(x)),sin(x/20))
plot(cos(x*x/100*cos(x)),sin(x/20), cex = 0.1)
plot(cos(x/100*sin(x*20)),cos(x/20)*sin(x/100), cex = 0.1)
plot(cos(x*100*sin(x)),cos(x/20), cex = 0.1)
plot(cos(x*100),cos(x*20),, cex = 0.1)
plot(cos(x*100),cos(x*20), cex = 0.1)
plot(sin(x*50),cos(x/100),cex = 0.1)
plot(cos(x*x/100*cos(x/2)),sin(x/20), cex = 0.1)
plot(cos(x*x/100*cos(x/20)),sin(x/20), cex = 0.1)
plot(cos(x*x/100*cos(x/200)),sin(x/20), cex = 0.1)
plot(cos(x*x/100*sin(x/200)),sin(x/20), cex = 0.1)
plot(cos(x/100*sin(x/200)),sin(x/20), cex = 0.1)
plot(cos(x/1000*sin(x/200)),sin(x/20), cex = 0.1)
plot(cos(x/1000*sin(x*200)),sin(x/20), cex = 0.1)
plot(cos(x/1000*sin(x*200)),sin(x/200), cex = 0.1)
plot(cos(x/1000*sin(x*200)),sin(x/200)*x, cex = 0.1)
plot(cos(x*1000*sin(x*200)),sin(x/200)*x, cex = 0.1)
plot(cos(x*100*sin(x*200)),sin(x/200)*x, cex = 0.1)
plot(cos(x*20*sin(x*200)),sin(x/200)*x, cex = 0.1)
plot(cos(x*sin(x*200)),sin(x/200)*x, cex = 0.1)
plot(cos(sin(x*200)),sin(x/200)*x, cex = 0.1)
plot(sin(sin(x*200)),sin(x/200)*x, cex = 0.1)
plot(sin(sin(x*200)),sin(x/200)*cos(x), cex = 0.1)
plot(sin(sin(x/20)),sin(x/200)*cos(x), cex = 0.1)
plot(sin(sin(x)),sin(x/200)*cos(x), cex = 0.1)
plot(acos(sin(x)),sin(x/200)*cos(x), cex = 0.1)
plot(cos(sin(x)),sin(x/200)*cos(x*2), cex = 0.1)
plot(cos(sin(x)),sin(x/200)*cos(x/2), cex = 0.1)
plot(cos(sin(x)),sin(x/200)*cos(x*3), cex = 0.1)
plot(cos(sin(x)),sin(x/200)*cos(x*4), cex = 0.1)
plot(cos(sin(x)),sin(x/200)*cos(x*5), cex = 0.1)
plot(cos(sin(x)),sin(x/200)*cos(x*6), cex = 0.1)
plot(cos(sin(x)),sin(x/200)*cos(x*7), cex = 0.1)
plot(cos(sin(x)),sin(x/200)*cos(x*8), cex = 0.1)
plot(cos(sin(x)),sin(x/200)*cos(x*80), cex = 0.1)
plot(cos(sin(x)),sin(x/200)*cos(x*20), cex = 0.1)
plot(cos(sin(x)),sin(x/200)*cos(x/20), cex = 0.1)
plot(cos(sin(x)),sin(x/200)*cos(x/2), cex = 0.1)
plot(cos(sin(x)),sin(x/200)*cos(x/3), cex = 0.1)
plot(cos(sin(x)),sin(x/200)*cos(x), cex = 0.1)
plot(cos(sin(x)),sin(x/200)*cos(x*2), cex = 0.1)
plot(cos(sin(x)),sin(x/200)*cos(x/2), cex = 0.1)
plot(cos(sin(x)),sin(x*200)*cos(x*2), cex = 0.1)
plot(cos(sin(x)),sin(x*20)*cos(x*2), cex = 0.1)
plot(cos(sin(x)),sin(x*2)*cos(x*2), cex = 0.1)
plot(cos(sin(x)),sin(x*15)*cos(x*2), cex = 0.1)
plot(cos(sin(x)),sin(x*10)*cos(x*2), cex = 0.1)
plot(cos(sin(x)),sin(x*7)*cos(x*2), cex = 0.1)
plot(cos(sin(x)),sin(x*7)*cos(x*20), cex = 0.1)
plot(cos(sin(x)),sin(x*7)*cos(x*15), cex = 0.1)
plot(cos(sin(x/2)),sin(x*7)*cos(x*15), cex = 0.1)
plot(cos(sin(x*2)),sin(x*7)*cos(x*15), cex = 0.1)
plot(cos(sin(x*2)),sin(x*70)*cos(x*15), cex = 0.1)
plot(cos(sin(x*2)),sin(x*2)*cos(x*15), cex = 0.1)
plot(cos(sin(x*2)),sin(x*1.5)*cos(x*15), cex = 0.1)
plot(cos(sin(x*2)),sin(x*3)*cos(x*15), cex = 0.1)
plot(cos(sin(x*2)),sin(x*3)*cos(x*-15), cex = 0.1)
plot(cos(-sin(x*2)),sin(x*3)*cos(x*15), cex = 0.1)
plot(cos(asin(x*2)),sin(x*3)*cos(x*15), cex = 0.1)
plot(cos(sin(x*2)),sin(x*3)*cos(x*15), cex = 0.1)
plot(cos(tan(x*2)),sin(x*3)*cos(x*15), cex = 0.1)
plot(cos(sin(x*2)),sin(x*3)*cos(x*15), cex = 0.1)
plot(cos(cos(x*2)),sin(x*3)*cos(x*15), cex = 0.1)
plot(cos(cos(x/2)),sin(x*3)*cos(x*15), cex = 0.1)
plot(cos(cos(x*2)),sin(x*x)*cos(x*15), cex = 0.1)
plot(cos(cos(x*2)),sin(x*x*x)*cos(x*15), cex = 0.1)
plot(cos(cos(x*2)),sin(x*x*x*x)*cos(x*15), cex = 0.1)
plot(cos(cos(x*2)),sin(x*x*x)*cos(x*x*15), cex = 0.1)
plot(cos(cos(x*2)),sin(x*x*x), cex = 0.1)
plot(cos(cos(x*2)),sin(x*x*(100*x)), cex = 0.1)
# load needed packages
needs(ggplot2, ggthemes, dplyr, reshape2)
# create the dataframe with fake data (will be automated later?)
party <- factor(c('CDU', 'SPD', 'FDP', 'Gr端ne','DieLinke', 'AfD', 'Sonstige'),
levels = c('CDU', 'SPD', 'FDP', 'Gr端ne','DieLinke', 'AfD', 'Sonstige'))
result <- c(44.5, 25.1, 6.5, 7.8, 5.6, 7.2, 1.5)
BezName <- c('Treptow','Treptow','Treptow','Treptow','Treptow','Treptow','Treptow')
perc_diff <- c(1.4, -3.6, -1.4, 0.2, 0.6, -0.9, 1.4)
d <- data.frame(party, result, perc_diff, bezirk)
# load needed packages
needs(ggplot2, ggthemes, dplyr, reshape2)
# create the dataframe with fake data (will be automated later?)
party <- factor(c('CDU', 'SPD', 'FDP', 'Gr端ne','DieLinke', 'AfD', 'Sonstige'),
levels = c('CDU', 'SPD', 'FDP', 'Gr端ne','DieLinke', 'AfD', 'Sonstige'))
result <- c(44.5, 25.1, 6.5, 7.8, 5.6, 7.2, 1.5)
BezName <- c('Treptow','Treptow','Treptow','Treptow','Treptow','Treptow','Treptow')
perc_diff <- c(1.4, -3.6, -1.4, 0.2, 0.6, -0.9, 1.4)
d <- data.frame(party, result, perc_diff, BezName)
# make sure that a plus sign will appear in front of the the difference
# DOESN'T WORK YET
d$perc_diff2 = as.character(d$perc_diff)
d$perc_diff2[d$perc_diff>0] = paste0("+", d$perc_diff2)
d$perc_diff <- d$perc_diff2
d$perc_diff2 = NULL
setwd("~/Desktop")
d13 <- read.delim("Bezirke2013Zweitstimmen.tsv")
d17 <- read.delim("Bezirke2017_FAKE.tsv")
d13 <- d13 %>%
mutate(Sonstige = 100-CDU-SPD-DieLinke-FDP-GRUENE-AfD)
d13 <- melt(d13, id.vars = c("Bezirk", "BezName"),
variable.name = "party",
value.name = "2013_result")
d17 <- melt(d13, id.vars = c("Bezirk", "BezName"),
variable.name = "party",
value.name = "2017_result")
d <- merge(d13, d17, by=c("Bezirk","BezName", "party"))
# just for testing
View(d)
View(d13)
View(d17)
d13 <- read.delim("Bezirke2013Zweitstimmen.tsv")
needs(dplyr, ggplot2, reshape2, data.table)
setwd("~/Dropbox/1706_Datawrapper/1708_onedatasetxcharts")
setwd("~/Dropbox/1706_Datawrapper/1708_onedatasetxcharts")
d_life <- read.csv("WHOSIS_000001,WHOSIS_000015.csv", stringsAsFactors = F, skip = 1)
d_life <- d_life %>%
select(Country, Year, X.Both.sexes) %>%
rename(lifeexp = X.Both.sexes, year = Year, country = Country)
View(d_life)
d_life <- read.csv("WHOSIS_000001,WHOSIS_000015.csv", stringsAsFactors = F, skip = 1)
View(d_life)
d_life <- d_life %>%
select(Country, Year, X.Both.sexes) %>%
rename(lifeexp = X.Both.sexes, year = Year, country = Country)
d_life <- read.csv("WHOSIS_000001,WHOSIS_000015.csv", stringsAsFactors = F, skip = 1)
d_life_mf <- read.csv("WHOSIS_000001,WHOSIS_000015.csv", stringsAsFactors = F, skip = 1)
d_life_mf <- d_life_mf %>%
select(Country, Year, X.Both.sexes, X.Male, X.Female) %>%
rename(both = X.Both.sexes, male = X.Male, female = X.Female, year = Year, country = Country)
View(d_life_mf)
d_life_mf <- d_life_mf %>%
select(Country, Year, X.Both.sexes, X.Male, X.Female) %>%
rename(both = X.Both.sexes, male = X.Male, female = X.Female, year = Year, country = Country)
d_life_mf <- read.csv("WHOSIS_000001,WHOSIS_000015.csv", stringsAsFactors = F, skip = 1)
d_life_mf <- d_life_mf %>%
select(Country, Year, X.Both.sexes, X.Male, X.Female) %>%
rename(both = X.Both.sexes, male = X.Male, female = X.Female, year = Year, country = Country)
d_life_mf <- d_life_mf %>%
select(Country, Year, X.Both.sexes, X.Male, X.Female) %>%
rename(both = X.Both.sexes, male = X.Male, female = X.Female, year = Year, country = Country)
d_life_mf <- read.csv("WHOSIS_000001,WHOSIS_000015.csv", stringsAsFactors = F, skip = 1)
d_life_mf <- d_life_mf %>%
select(Country, Year, X.Both.sexes, X.Male, X.Female) %>%
rename(both = X.Both.sexes, male = X.Male, female = X.Female, year = Year, country = Country)
d_gdp <- read.csv("API_NY.GDP.PCAP.PP.KD_DS2_en_csv_v2.csv", stringsAsFactors = F)
d_gdp <- d_gdp %>%
select(Country.Name, Country.Code, starts_with("X20"), -X2016) %>%
rename(country = Country.Name, countrycode = Country.Code)
d_gdp <- melt(d_gdp,
id.vars = c("country","countrycode"),
variable.name = "year",
value.name = "gdp")
d_gdp$year = as.character(d_gdp$year)
d_gdp$year = as.numeric(substring(d_gdp$year,2))
d_gdp <- read.csv("API_NY.GDP.PCAP.PP.KD_DS2_en_csv_v2.csv", stringsAsFactors = F)
View(d_gdp)
d_gdp <- d_gdp %>%
select(Country.Name, Country.Code, starts_with("X20"), -X2016) %>%
rename(country = Country.Name, countrycode = Country.Code)
d_gdp <- melt(d_gdp,
id.vars = c("country","countrycode"),
variable.name = "year",
value.name = "gdp")
d_gdp$year = as.character(d_gdp$year)
d_gdp$year = as.numeric(substring(d_gdp$year,2))
d_pop <- read.csv("dw_gapminder_pop.csv", stringsAsFactors = F)
d_pop <- d_pop %>%
rename(country = Region..subregion..country.or.area..,
countrycode = Country.code) %>%
select(country, countrycode, starts_with("X20"))
# transform from wide to long format
d_pop <- melt(d_pop,
id.vars = c("country","countrycode"),
variable.name = "year",
value.name = "pop")
# get rid of the extra X. in the year
d_pop$year = as.character(d_pop$year)
d_pop$year = as.numeric(substring(d_pop$year,2))
# remove white spaces from the gdp number
d_pop$pop = gsub(" ", "", d_pop$pop, fixed = TRUE)
d_pop$pop = as.numeric(d_pop$pop)
d_countries = read.csv("dw_gapminder_lifeexpectancy - d_country.csv", stringsAsFactors = F)
# reduces the number of continents
d_countries$continent[d_countries$continent == "Asia"] <- "Asia and Oceania"
d_countries$continent[d_countries$continent == "Oceania"] <- "Asia and Oceania"
d_countries$continent[d_countries$continent == "South America"] <- "America"
d_countries$continent[d_countries$continent == "Central America"] <- "America"
d_countries$continent[d_countries$continent == "North America"] <- "America"
e = merge(d_pop, d_life, by=c("country","year"))
d_countries = read.csv("dw_gapminder_lifeexpectancy - d_country.csv", stringsAsFactors = F)
# reduces the number of continents
d_countries$continent[d_countries$continent == "Asia"] <- "Asia and Oceania"
d_countries$continent[d_countries$continent == "Oceania"] <- "Asia and Oceania"
d_countries$continent[d_countries$continent == "South America"] <- "America"
d_countries$continent[d_countries$continent == "Central America"] <- "America"
d_countries$continent[d_countries$continent == "North America"] <- "America"
e = c(1,2,3)
plot(1,2)
d_life_change <- dcast(d_life, country ~ year)
e = merge(d_pop, d_life, by=c("country","year"))
plot(d_gdp$year, d_gdp$gdp)
hist(d_gdp$gdp)
hist(d_gdp$gdp, breaks = 100)
ggplot(d_gdp, aes(x=year, y=gdp)) + geom_point()
ggplot(d_gdp, aes(x=year, y=gdp)) + geom_point(size=3)
ggplot(d_gdp, aes(x=year, y=gdp)) + facet_grid(country~.)
d_life <- read.csv("WHOSIS_000001,WHOSIS_000015.csv", stringsAsFactors = F, skip = 1)
d_life <- d_life %>%
select(Country, Year, X.Both.sexes) %>%
rename(lifeexp = X.Both.sexes, year = Year, country = Country)
d_life_mf <- read.csv("WHOSIS_000001,WHOSIS_000015.csv", stringsAsFactors = F, skip = 1)
d_life_mf <- d_life_mf %>%
select(Country, Year, X.Both.sexes, X.Male, X.Female) %>%
rename(both = X.Both.sexes, male = X.Male, female = X.Female, year = Year, country = Country)
d_gdp <- read.csv("API_NY.GDP.PCAP.PP.KD_DS2_en_csv_v2.csv", stringsAsFactors = F)
d_gdp <- d_gdp %>%
select(Country.Name, Country.Code, starts_with("X20"), -X2016) %>%
rename(country = Country.Name, countrycode = Country.Code)
d_gdp <- melt(d_gdp,
id.vars = c("country","countrycode"),
variable.name = "year",
value.name = "gdp")
d_gdp$year = as.character(d_gdp$year)
d_gdp$year = as.numeric(substring(d_gdp$year,2))
d_pop <- read.csv("dw_gapminder_pop.csv", stringsAsFactors = F)
d_pop <- d_pop %>%
rename(country = Region..subregion..country.or.area..,
countrycode = Country.code) %>%
select(country, countrycode, starts_with("X20"))
# transform from wide to long format
d_pop <- melt(d_pop,
id.vars = c("country","countrycode"),
variable.name = "year",
value.name = "pop")
# get rid of the extra X. in the year
d_pop$year = as.character(d_pop$year)
d_pop$year = as.numeric(substring(d_pop$year,2))
# remove white spaces from the gdp number
d_pop$pop = gsub(" ", "", d_pop$pop, fixed = TRUE)
d_pop$pop = as.numeric(d_pop$pop)
d_countries = read.csv("dw_gapminder_lifeexpectancy - d_country.csv", stringsAsFactors = F)
# reduces the number of continents
d_countries$continent[d_countries$continent == "Asia"] <- "Asia and Oceania"
d_countries$continent[d_countries$continent == "Oceania"] <- "Asia and Oceania"
d_countries$continent[d_countries$continent == "South America"] <- "America"
d_countries$continent[d_countries$continent == "Central America"] <- "America"
d_countries$continent[d_countries$continent == "North America"] <- "America"
e = merge(d_pop, d_life, by=c("country","year"))
d = merge(d_gdp, e, by=c("country","year"))
d <- d %>%
select(-starts_with("countrycode"))
d_life_wide <- dcast(d_life, country ~ year)plot()
e = merge(d_pop, d_life, by=c("country","year"))
d = merge(d_gdp, e, by=c("country","year"))
d <- d %>%
select(-starts_with("countrycode"))
d_life_wide <- dcast(d_life, country ~ year)
d_life_wide <- d_life_wide %>%
select(country, `2000`, `2015`) %>%
mutate(change = `2015`-`2000`)
# adds a column which continents the countries are on
d_life_wide <- merge(d_life_wide, d_countries, by = "country")
d_life_change <- dcast(d_life, country ~ year)
d_life_change <- d_life_change %>%
select(country, `2000`, `2015`) %>%
mutate(change = `2015`-`2000`)
d_life_wide_top <- d_life_wide %>%
top_n(n=7, wt=`2015`)
d_life_wide_bottom <- d_life_wide %>%
top_n(n=20, wt=-`2015`)
d_life_extremes <- rbind(d_life_wide_bottom, d_life_wide_top)
d_life_extremes <- d_life_extremes %>%
arrange(desc(`2015`))
d_life_decades <- d_life_wide %>%
mutate(decade = floor(`2015`/2)*2) %>%
group_by(decade, continent) %>%
count(continent,sort=TRUE)
d_life_decades <- na.omit(d_life_decades)
# write it as wide format
d_life_decades <- dcast(d_life_decades, decade ~ continent)
# replace NA with 0, so that Datawrapper can handle it
d_life_decades[is.na(d_life_decades)] <- "0"
# reorder the columns for a better graphic
d_life_decades <- d_life_decades[c("decade", "Africa", "Europe", "America", "Asia and Oceania")]
d_life_pop <- d_pop %>%
filter(year > 2014) %>%
select(country,pop)
d_life_pop = merge(d_life_pop, d_life_wide, by="country")
ggplot(d_life_wide, aes(x = `2015`)) +
geom_dotplot(aes(fill=continent), binwidth = 1, method="histodot") +
facet_grid(continent~.)
dotPlot( ~ `2015`, data = d_life_wide, width = 1, groups = continent,
par.settings=list(superpose.symbol = list(pch = 16)))
d_diffgender <- d_life_mf %>%
mutate(diff_gender = female-male) %>%
filter(year == 2015 ) %>%
select(country, diff_gender)
d_diffgender <- merge(d_diffgender, d_life_wide, by=c("country"))
d_diffgender <- d_diffgender %>%
select(country,change,diff_gender,continent)
# just export the female and male numbers for Syria
d_life_mf_syria <- d_life_mf %>%
filter(country == "Syrian Arab Republic" | country == "Germany" ) %>%
select(country,year,male,female)
d_life_mf_switch <- d_life_mf %>%
mutate(perc = 100/female*male) %>%
group_by(country) %>%
filter(max(perc)>100)
# calculate the difference between male and female
d_life_mf_c <- d_life_mf %>%
mutate(diff_gender = female-male) %>%
filter(year == 2000 | year == 2015 ) %>%
select(-diff, -both)
# from long to a bit wider again
d_life_mf_c <- dcast(d_life_mf_c, country + gender ~ year)
ggplot(d_life_wide, aes(x = `2015`)) +
geom_dotplot(aes(fill=continent), binwidth = 1, method="histodot") +
facet_grid(continent~.)
dotPlot( ~ `2015`, data = d_life_wide, width = 1, groups = continent,
par.settings=list(superpose.symbol = list(pch = 16)))
ggplot(d_life_wide, aes(x = `2015`)) +
geom_dotplot(aes(fill=continent), binwidth = 1, method="histodot") +
facet_grid(continent~.)
#dotPlot( ~ `2015`, data = d_life_wide, width = 1, groups = continent,
# par.settings=list(superpose.symbol = list(pch = 16)))
d_life_wide <- dcast(d_life, country ~ year)
d_life_Iraq <- d_life_wide %>%
filter(country == "Iraq" | country == "United States of America" | country == "Haiti")
d_life_2015 <- d_life %>%
filter(year > 2014)
d_life_2015$year = NULL
d_life_5years <- d_life %>%
filter(year == 2000 | year == 2005 | year == 2010 | year == 2015 )
# hisotgram for 2000, 2005, 2010 and 2015
# with colors for continents
d_life_5years <- merge(d_life_5years, d_countries, by="country")
ggplot(d_life_5years, aes(x=lifeexp)) +
geom_histogram(binwidth = 0.5, aes(fill=continent)) +
facet_grid(year~.)
# density plot for 2000, 2005, 2010 and 2015
d_life_5years <- merge(d_life_5years, d_countries, by="country")
ggplot(d_life_5years, aes(x=lifeexp)) +
geom_density() +
facet_grid(year~continent)
ggplot(d_life_5years, aes(x=lifeexp)) +
geom_density()
ggplot(d_life_5years, aes(x=lifeexp)) +
geom_density() +
facet_grid(year~continent)
ggplot(d_life_5years, aes(x=lifeexp)) +
geom_density() +
facet_grid(year~continent)
# remove the column "change" from the dataframe
d_slope <- d_life_wide %>%
select(-change)
install.packages(c("sp","rgdal","raster"))
d = c(1:30)
e = yeeeah
e = "yeah"
rm(dd)
rm(d)
rm(list = ls())
d = c(1:30)
e = 3
f = 4
rm(*)
needs(dplyr, readr)
d <- read_csv('~/Desktop/at-muni-un-3 (1).csv')
d %>% count_by(GEM_NR) %>% View
needs(tidyr)
d %>% count_by(GEM_NR) %>% View
d %>% group_by(GEM_NR)
d %>% group_by(GEM_NR) %>% mutate(n=n()) %>% arrange(-n) %>% View
setwd("~/gitspace/dayprojects/sinxcosx")
x <- seq(-100,100,0.01)
y <- seq(-10,10,0.0001)
par(mar = rep(0, 4), xpd = NA)
library(ggplot2)
plot(cos(x),sin(x), cex = 0.1)
plot(-sin(cos(x)),-log10(x), cex = 0.1)
plot(-cos(x)*10000*x,sin(x*2)*sin(x)*cos(x), cex = 0.1)
plot(100*cos(x)*100*x,sin(x/10)*sin(x)*cos(x), cex = 0.1)
plot(cos(x)*1000*sin(x/10),sin(x/10)/200*cos(x*10), cex = 0.1)
plot(cos(x/1000),sin(x*2), cex = 0.1)
plot(cos(10000/x),sin(x/10000), cex = 0.1)
plot(sin(100/x),sin(x/10000), cex = 0.1)
plot(sin(x),sin(20*x)*x*cos(20*x), cex = 0.1)
plot(cos(x)*1000*sin(x/1000),-sin(1000/x)/10000*cos(x*10), cex = 0.1)
plot(cos(x)*1000*sin(10000/x),-sin(1000/x)/10000*cos(x*10), cex = 0.1)
plot(cos(x)*10000*sin(x),-sin(10000/x)/10000*cos(x*10), cex = 0.1)
plot(-cos(x)*10000*x,sin(x*2)*sin(x)*cos(x), cex = 0.1)
plot(100*cos(x)*100*x,sin(x/10)*sin(x)*cos(x), cex = 0.1)
plot(-sin(cos(x)),-log10(x), cex = 0.1)
plot(-cos(x)*10000*x,sin(x*2)*sin(x)*cos(x), cex = 0.1)
plot(100*cos(x)*100*x,sin(x/10)*sin(x)*cos(x), cex = 0.1)
plot(cos(sqrt(x))*x*x*x,sin(sqrt(x)), cex = 0.1)
plot(cos(sqrt(x))*cos(x/2)*x*sin(x),sin(sqrt(x)), cex = 0.1)
plot(cos(sqrt(x))*cos(x/2)/2*x*sin(x),sin(sqrt(x))*x, cex = 0.1)
plot(abs(sqrt(x))*cos(x/2)/2*x*abs(x),abs(sqrt(x))*x, cex = 0.1)
plot(abs(sqrt(x))*x*abs(x),sin(x)*x, cex = 0.1)
plot(sinpi(x*100)*sinpi(x/10000),sin(x), cex = 0.1)
plot(sinpi(x*x)*sinpi(x/10000),sin(x), cex = 0.1)
plot(sinpi(x*x*x)*sinpi(x/10000),sin(x), cex = 0.1)
plot(cos(x)*x,sin(x)*2, cex = 0.1)
plot(cos(x*x)*x,sin(x)*2, cex = 0.1)
plot(cospi(y/1000)*y,sin(y*10*y)*10000, cex = 0.1)
plot(cospi(y/10)*y*100,sin(y*10*y)*10000, cex = 0.1)
plot(cospi(y/1000)*y,sin(y*10*y)*10000, cex = 0.1)
plot(cos(x*x)*x,sin(x)*2, cex = 0.1)
plot(sinpi(x*x)*sinpi(x/10000),sin(x), cex = 0.1)
plot(abs(sqrt(x))*x*abs(x),sin(x)*x, cex = 0.1)
plot(sinpi(x*100)*sinpi(x/10000),sin(x), cex = 0.1)
plot(sinpi(x*x)*sinpi(x/10000),sin(x), cex = 0.1)
plot(sinpi(x*x*x)*sinpi(x/10000),sin(x), cex = 0.1)
plot(cos(x)*x,sin(x)*2, cex = 0.1)
plot(cospi(y/1000)*y*100,sin(y*10*y)*10000, cex = 0.1)
plot(cos(y/sinpi(10000*y))*100*y*y*y,sinpi(sinpi(y)), cex = 0.1)
plot(cos(cospi(y)/sinpi(y/10))*100*y*y*y,sinpi(sinpi(y)), cex = 0.1)
plot(cospi(x*abs(tan(x)))*cos(x),sin(x), cex = 0.1)
plot(cospi(x*abs(exp(x)))*cos(x),sin(x), cex = 0.1)
plot(cospi(x*abs(expm1(x)))*cos(x),sin(x), cex = 0.1)
plot(cospi(x*abs(exp(x)/1000))*cos(x),sin(x), cex = 0.1)
plot(sin(sqrt(x))*cos(x),sin(x), cex = 0.1)
plot(sin(1/cospi(x))*sin(cos(x))*sin(cos(x)),sin(100/x)*1000, cex = 0.1)
plot(cos(cos(cos(x*10000)))*sin(cos(x/1000))*sin(cos(x)),sin(x), cex = 0.1)
plot(sin(cos(20000*x))*cos(x),sin(x), cex = 0.1)
plot(sin(cos(cos(x*10000)/100000))*cos(x*10000000),sin(x*100000000), cex = 0.1)
plot(cos(sinpi(x*x))*x*x/1000,sin(sqrt(x)), cex = 0.1)
plot(cos(sinpi(x)*cos(x)*200)*x*x/1000,sin(cospi(x)), cex = 0.1)
plot(cos(tanpi(x))*x*abs(x)*1000,abs(cospi(x))*x*x*abs(x), cex = 0.1)
plot(cos(tanpi(x))*x*abs(x)*1000,abs(cospi(x))*x*x*abs(x), cex = 0.1)
plot(cos(sinpi(x)*cos(x)*200)*x*x/1000,sin(cospi(x)), cex = 0.1)
plot(cos(x*x)*x,sin(x)*2, cex = 0.1)
plot(cos(x)*x,sin(x)*2, cex = 0.1)
plot(abs(cos(abs(y*400000))),cos(2*y/abs(sin(y))), cex = 0.1)
plot(cospi(y*abs(y*10)),sinpi(y*2)*sinpi(exp(y)), cex = 0.1)
plot(cospi(y*abs(y*10)),sinpi(y*2)+sinpi(exp(y)), cex = 0.1)
